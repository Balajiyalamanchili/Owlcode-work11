#TLE TLE TLE TLE TLE TLE TLE TLE TLE TLE TLE TLE TLE TLE TLE TLE TLE
1------------------------------
class Solution:
    def maximumSubarraySum(self, n: List[int], k: int) -> int:
        l=[]
        for i in range(len(n)):
            for j in range(i+1,len(n)):
                k1=n[i:j+1]
                #print(k1)
                if abs(k1[0]-k1[len(k1)-1])==k:
                    l.append(sum(k1))
        if len(l)==0:
            return 0
        return max(l)
2--------------------------------------
class Solution:
    def maximumSubarraySum(self, n: List[int], k: int) -> int:
        l=[]
        for i in range(len(n)):
            for j in range(i+1,len(n)):
                if abs(n[i]-n[j])==k:
                #k1=n[i:j+1]
                #print(k1)
                #if abs(k1[0]-k1[len(k1)-1])==k:
                    k1=n[i:j+1]
                    l.append(sum(k1))
        if len(l)==0:
            return 0
        return max(l)
        
